import { Property } from "csstype";
import { CSSProperties, PropsWithChildren } from "react";
interface IAndroidTabMockupProps {
    /**
     * Width of mockup screen.
     * The height is automatically calculated according to the ratio.
     * - NOTE: It does not mean the full width of the mockup being rendered.
     */
    readonly screenWidth: number;
    /**
     * @default false
     * @description No use rounded screen corners
     */
    readonly noRoundedScreen?: boolean;
    /**
     * @default false
     * @description portrait or landscape. `false` means portrait
     */
    readonly isLandscape?: boolean;
    readonly className?: string;
    /** Styles for mockup container */
    readonly containerStlye?: CSSProperties;
    /**
     * @default "#666666"
     * @description Color of Frame
     */
    readonly frameColor?: Property.Color;
    /**
     * @default false
     * @description Only the frame is shown. Power button and volume buttons are hidden
     */
    readonly frameOnly?: boolean;
    /**
     * @default "#CCCCCC"
     * @description Color of status bar
     */
    readonly statusbarColor?: Property.Color;
    /**
     * @default false
     * @description Hide the status bar
     * - `false`: Status bar occupies its own space with `statusbarColor`. (default)
     * - `true`: Status bar no longer occupies its own area, but becomes part of the screen area.
     */
    readonly hideStatusBar?: boolean;
    /**
     * @default "swipe"
     * @description Type of navigation bar.
     * - `"swipe"`: swipe gesture navigation bar. (modern style)
     * - `"bhr"`: back-home-recent buttons. (classic style)
     * - `"rhb"`: recent-home-back. (classic style)
     */
    readonly navBar?: "swipe" | "bhr" | "rhb";
    /**
     * @default "#CCCCCC"
     * @description Color of navigation bar
     */
    readonly navBarColor?: Property.Color;
    /**
     * @default false
     * @description Make the navigation bar transparent.
     * - `false`: Navigation bar occupies its own space with `navBarColor`. (default)
     * - `true`: Navigation bar no longer occupies its own area, but becomes part of the screen area.
     * - NOTE: Swipe bar or buttons are rendered according to the type specified by `navBar` props.
     */
    readonly transparentNavBar?: boolean;
    /**
     * @default false
     * @description Hide the navigation bar.
     * - `false`: Show the navigation bar. (default)
     * - `true`: Hide the navigation bar. Navigation bar no longer occupies its own area, but becomes part of the screen area.
     * - NOTE: Swipe bar or buttons are **NOT** rendered according to the type specified by `navBar` props.
     */
    readonly hideNavBar?: boolean;
}
export type AndroidTabMockupProps = PropsWithChildren<IAndroidTabMockupProps>;
export default function AndroidTabMockup(props: AndroidTabMockupProps): import("react/jsx-runtime").JSX.Element;
export {};
//# sourceMappingURL=AndroidTabMockup.d.ts.map